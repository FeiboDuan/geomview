dnl Copyright (C) 2007 Claus-Justus Heine
dnl  
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl 
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software 
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl 
dnl As a special exception to the GNU General Public License, if you 
dnl distribute this file as part of a program that contains a configuration 
dnl script generated by Autoconf, you may include it under the same 
dnl distribution terms that you use for the rest of that program.

# Determine installation paths (includes, libraries etc.) from the
# installed version of Geomview
#
# GV_INIT_GEOMVIEW(MAJOR_OP,MAJOR,MINOR_OP,MINOR)
#
AC_DEFUN([GV_INIT_GEOMVIEW],
[AC_ARG_WITH(geomview,
  AC_HELP_STRING([--with-geomview=PROGRAM],
[Set PROGRAM to the name of the Geomview executable, possibly including the full
path to the executable. The installed version of Geomview is used to determine
the library, include and data directories to use. (default: autodetected)]),
  [case "${withval}" in
    no)
      AC_MSG_ERROR(["--without-geomview" or "--with-geomview=no" is not an option here])
      ;;
    yes) # simply ignore that, use auto-detection
      ;;
    *) 
      GEOMVIEWOPT=$withval
    esac],
  [GEOMVIEWOPT=geomview])
  AC_PATH_PROGS(GEOMVIEW, ${GEOMVIEWOPT}, "not found")
  if test "${GEOMVIEW}" = "not found"; then
	AC_MSG_ERROR([Geomview binary not found. Check your installation.])
	exit 1
  fi

  #
  # optionally check for the version of Geomview
  #
  gvversion=`${GEOMVIEW} --version`
  AC_MSG_RESULT([Geomview version: ${gvversion}])
  gv_major=`echo $gvversion|cut -d '.' -f 1`
  gv_minor=`echo $gvversion|cut -d '.' -f 2`
  m4_if($#,4,[gv_major_ok=`expr $gv_major '$1' $2`
    gv_minor_ok=`expr $gv_minor '$3' $4`
    if test "$gv_major_ok" != "1" -o "$gv_minor_ok" != "1" ; then
      AC_MSG_ERROR([

$PACKAGE requires Geomview version N.M, where N$2$3 and M$4$5.
Your version of Geomview seems to be $gv_major.$gv_minor.$gv_rev.

])
  fi]) dnl m4_if

  #
  # get the location of everything else from the installed geomview script.
  #

  moduledir=`${GEOMVIEW} --print-geomview-emodule-dir`
  AC_SUBST(moduledir)
  AC_MSG_RESULT([Module will go into "${moduledir}/"])

  module_tcldir="${moduledir}/tcl"
  AC_SUBST(module_tcldir)
  AC_MSG_RESULT([TCL scripts will go into "${module_tcldir}/"])

  geomdatadir=`${GEOMVIEW} --print-geomview-data-dir`
  AC_SUBST(geomdatadir)
  AC_MSG_RESULT([Data will go into "${geomdatadir}/"])

  geomviewlib=`${GEOMVIEW} --print-geomview-lib`
  OOGLLIB="-L${geomviewlib} -lgeomview"
  AC_SUBST(geomviewlib)
  AC_SUBST(OOGLLIB)
  AC_MSG_RESULT([libgeomview below "${geomviewlib}/"])

  geomviewincludes=`${GEOMVIEW} --print-geomview-include`
  AC_SUBST(geomviewincludes)
  AC_MSG_RESULT([Geomview include files below "${geomviewincludes}/"])

  #
  # check for stuff s.t. Geomview's header files can be included,
  # notably "porting"; but we also make sure that bool_t is defined,
  # and that we have some value for PATH_MAX
  #
  AC_C_BIGENDIAN
  AC_C_CONST
  AC_HEADER_STDBOOL
  AC_C_INLINE
  AC_CHECK_DECLS([putenv, strdup, acosh, strcasecmp, strncasecmp])
  AC_CHECK_FUNCS([bcopy bzero finite])
  AC_LANG_PUSH([C])
  AC_MSG_CHECKING([for M_PI])
  AC_COMPILE_IFELSE(
    [AC_LANG_PROGRAM(
[#if HAVE_MATH_H
# include <math.h>
#endif
],
    [double blah = M_PI;])],
    [AC_MSG_RESULT([yes])
    AC_DEFINE(HAVE_M_PI, 1, [Define to 1 if M_PI is defined])],
    [AC_MSG_RESULT([no])])
  AC_LANG_POP([C])
  AC_CHECK_HEADERS([sys/types.h stdio.h])
  AH_BOTTOM([#ifdef HAVE_STDBOOL_H
# include <stdbool.h>
#else
# ifndef HAVE__BOOL
#  ifdef __cplusplus
typedef bool _Bool;
#  else
#   define _Bool signed char
#  endif
# endif
# define bool _Bool
# define false 0
# define true 1
# define __bool_true_false_are_defined 1
#endif

/* make sure we have PATH_MAX */
#if HAVE_LIMITS_H
# include <limits.h>
#endif
#if HAVE_SYS_PARAM
# include <sys/param.h>
#endif
#ifndef PATH_MAX
# ifndef _POSIX_PATH_MAX
#  ifndef MAXPATHLEN
#   define PATH_MAX 4096
#  else
#   define PATH_MAX MAXPATHLEN
#  endif
# else
#  define PATH_MAX _POSIX_PATH_MAX
# endif
#endif])
])
